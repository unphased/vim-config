[user]

[delta]
  # side-by-side = true
  max-line-length = 2048
  wrap-max-lines = 10
  features = line-numbers decorations
  syntax-theme = zenburn
  plus-style = bold syntax "#004000"
  plus-non-emph-style = syntax "#002000"
  plus-emph-style = bold syntax "#006800"
  minus-style = bold syntax "#400000"
  minus-non-emph-style = syntax "#200000"
  minus-emph-style = bold syntax "#680000"

; [delta "decorations"]
;   ; commit-style = raw
;   commit-decoration-style = bold yellow box ul
;   commit-style = yellow bold
;   ; file-style = omit
;   file-decoration-style = none
;   hunk-header-decoration-style = omit
;   hunk-header-line-number-style = magenta
;   hunk-header-style = file line-number syntax

[delta "line-numbers"]
  line-numbers-left-style = red
  line-numbers-right-style = green
  line-numbers-minus-style = "bold #7f0000"
  line-numbers-plus-style = "bold #007800"
  line-numbers-left-format = "{nm:>3}Â¦"
  line-numbers-right-format = "{np:>3}â”‚"

; [pager]
;   diff = delta
;   log = delta
;   reflog = delta
;   show = delta
;   blame = delta

[interactive]
  diffFilter = delta --color-only --features=interactive

[core]
  editor = nvim
  whitespace = cr-at-eol
  excludesfile = ~/.gitignore
  autocrlf = input
  pager = sed 's/\t/â†’\t/g' | delta --paging=always
[color]
  ui = true
[alias]
  lg = log --graph --date-order --pretty=format:'%C(bold magenta)%h%Creset -%C(auto)%d%Creset %s %Cgreen%ci %C(yellow)(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
  lh = !util/git-log-hyperlink.sh
  s = "!f() { git status --short; ignored=$(git ignored); [ -n \"$ignored\" ] && echo \"$ignored\"; };f"
  unadd = reset HEAD
  ignore = update-index --skip-worktree
  unignore = update-index --no-skip-worktree
  ignored = !git ls-files -v | grep "^S"
  status-with-ignored = "!f() { git status -uno; ignored=$(git ignored | cut -d ' ' -f 2 | sed -e s/^/[31m/ -e s/$/[m/); [ -n \"$ignored\" ] && echo \"git skip-worktree (ignored):\n$ignored\"; };f"
  diff-with-ignored = "!f() { git diff ; ignored=$(git ignored | cut -d ' ' -f 2); [ -n \"$ignored\" ] && echo \"git skip-worktree (ignored):\" && for var in $ignored; do echo [31m$var[m; git show HEAD:$var | diff -u - $var; done };f"
  # diff-with-ignored-ext = "!f() { git diff --ext-diff | cat; ignored=$(git ignored | cut -d ' ' -f 2); [ -n \"$ignored\" ] && echo \"git skip-worktree (ignored):\" && for var in $ignored; do echo [31m$var[m; git show HEAD:$var | sift - $var; done };f"

  commit-push = "!f() { git commit-message \"$*\" && git push; };f"
  commit-message = "!f() { [ -z \"$*\" ] && git commit -am \"- old bugs fixed\n- new bugs added\" || git commit -am \"$*\"; };f"
  alias-search = "!f() { git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ / | grep $1; };f"
  stash-working = "!f() { \
    git commit --quiet --no-verify -m \"temp for stash-working\" && \
    git stash push \"$@\" && \
    git reset --quiet --soft HEAD~1; }; f"
[difftool]
  ; prompt = false
[diff]
  mnemonicprefix = true
  # external = sift
  ; tool = sift
  # tool = opendiff
  colorMoved = zebra
  colormovedws = allow-indentation-change
  algorithm = patience
[blame]
  coloring = highlightRecent
[color]
  branch = auto
  #diff = always
  status = always
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = blue
  frag = magenta
  old = red
  new = green
  whitespace = blue reverse
  oldMoved = 7 "#180030"
  oldMovedAlternative = 7 "#100038"
  newMoved = 7 "#001830"
  newMovedAlternative = 7 "#001038"
[color "status"]
  added = yellow
  changed = green
  untracked = cyan
[rerere]
  enabled = true
[merge]
  stat = true
  conflictStyle = diff3
[difftool "sourcetree"]
  cmd = opendiff \"$LOCAL\" \"$REMOTE\"
  path = 
[difftool "sift"]
  cmd = sift \"$LOCAL\" \"$REMOTE\"
[mergetool "sourcetree"]
  cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
  trustExitCode = true
[push]
  default = simple
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
[status]
  submoduleSummary = true
[credential]
  helper = store
[config]
  helper = store
[pull]
  rebase = false
